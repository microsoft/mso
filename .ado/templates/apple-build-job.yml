parameters:
  - name: DependsOn
    type: string
    default: ''

jobs:
- job: AppleBuild
  displayName: Apple Build
  ${{ if ne(parameters.DependsOn, '') }}:
    dependsOn: ${{ parameters.DependsOn }}
  ${{ if ne(parameters.DependsOn, '') }}:
    condition: succeeded()
  timeoutInMinutes: 30
  cancelTimeoutInMinutes: 2
  pool:
    vmImage: 'macOS-10.15'
  strategy:
    matrix:
      iOS_Debug:
        MsoPlatform: IOS
        BuildConfiguration: Debug
      iOS_Release:
        MsoPlatform: IOS
        BuildConfiguration: Release
      macOS_Debug:
        MsoPlatform: MAC
        BuildConfiguration: Debug
      macOS_Release:
        MsoPlatform: MAC
        BuildConfiguration: Release
  steps:
    - checkout: self
      clean: false
      submodules: false

    - task: CMake@1
      displayName: Generate build scripts
      inputs:
        workingDirectory: $(Build.BinariesDirectory)/$(MsoPlatform)/$(BuildConfiguration)
        cmakeArgs: -DMSO_LIBLET_PLATFORM=$(MsoPlatform) -DCMAKE_BUILD_TYPE=$(BuildConfiguration) $(Build.SourcesDirectory)

    - task: CMake@1
      displayName: Build
      inputs:
        workingDirectory: $(Build.BinariesDirectory)/$(MsoPlatform)/$(BuildConfiguration)
        cmakeArgs: --build .

    - task: CMake@1
      displayName: Stage built files
      inputs:
        workingDirectory: $(Pipeline.Workspace)
        cmakeArgs: --install $(Build.BinariesDirectory)/$(MsoPlatform)/$(BuildConfiguration) --prefix tests --component tests

    - script: ./eventWaitHandle_tests
      displayName: Tests - Event Wait Handle
      workingDirectory: $(Pipeline.Workspace)/tests/$(MsoPlatform)/$(BuildConfiguration)

    - script: ./functional_tests
      displayName: Tests - Functional
      workingDirectory: $(Pipeline.Workspace)/tests/$(MsoPlatform)/$(BuildConfiguration)

    - script: ./object_tests
      displayName: Tests - Object
      workingDirectory: $(Pipeline.Workspace)/tests/$(MsoPlatform)/$(BuildConfiguration)

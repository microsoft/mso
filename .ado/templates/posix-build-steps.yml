steps:
- checkout: self
  clean: false
  submodules: false

- task: CMake@1
  displayName: Generate build scripts
  inputs:
    workingDirectory: $(Build.BinariesDirectory)/$(MsoPlatform)/$(BuildConfiguration)
    cmakeArgs: -DMSO_LIBLET_PLATFORM=$(MsoPlatform) -DCMAKE_BUILD_TYPE=$(BuildConfiguration) $(Build.SourcesDirectory)

- task: CMake@1
  displayName: Build
  inputs:
    workingDirectory: $(Build.BinariesDirectory)/$(MsoPlatform)/$(BuildConfiguration)
    cmakeArgs: --build .

- task: CMake@1
  displayName: Stage built files
  inputs:
    workingDirectory: $(Pipeline.Workspace)
    cmakeArgs: --install $(Build.BinariesDirectory)/$(MsoPlatform)/$(BuildConfiguration) --prefix tests --component tests

- script: ./activeObject_tests
  displayName: Liblet tests - activeObject
  workingDirectory: $(Pipeline.Workspace)/tests/$(MsoPlatform)/$(BuildConfiguration)

- script: ./errorCode_tests
  displayName: Liblet tests - activeObject
  workingDirectory: $(Pipeline.Workspace)/tests/$(MsoPlatform)/$(BuildConfiguration)

- script: ./eventWaitHandle_tests
  displayName: Liblet tests - eventWaitHandle
  workingDirectory: $(Pipeline.Workspace)/tests/$(MsoPlatform)/$(BuildConfiguration)

- script: ./functional_tests
  displayName: Liblet tests - functional
  workingDirectory: $(Pipeline.Workspace)/tests/$(MsoPlatform)/$(BuildConfiguration)

- script: ./future_tests
  displayName: Liblet tests - future
  workingDirectory: $(Pipeline.Workspace)/tests/$(MsoPlatform)/$(BuildConfiguration)

- script: ./guid_tests
  displayName: Liblet tests - guid
  workingDirectory: $(Pipeline.Workspace)/tests/$(MsoPlatform)/$(BuildConfiguration)

- script: ./object_tests
  displayName: Liblet tests - object
  workingDirectory: $(Pipeline.Workspace)/tests/$(MsoPlatform)/$(BuildConfiguration)

- task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
  displayName: ðŸ“’ Generate Manifest
  inputs:
    BuildDropPath: $(Build.BinariesDirectory)/$(MsoPlatform)/$(BuildConfiguration)

- task: PublishPipelineArtifact@1
  displayName: ðŸ“’ Publish Manifest
  inputs:
    artifactName: SBom-$(MsoPlatform)-$(BuildConfiguration)-$(System.JobAttempt)
    targetPath: $(Build.BinariesDirectory)/$(MsoPlatform)/$(BuildConfiguration)/_manifest